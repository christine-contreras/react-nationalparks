{"version":3,"sources":["components/nav/Logo.js","components/nav/Menu.js","containers/Nav.js","containers/Layout.js","components/home/Form.js","components/home/Hero.js","components/ParkCard.js","renderStateName.js","containers/ParksContainer.js","containers/Home.js","containers/SavedParks.js","components/park/ParkNav.js","components/park/ParkInfo.js","components/park/ParkAbout.js","renderPhoneNumber.js","components/park/ParkFees.js","components/park/ParkActivities.js","components/park/ParkWeather.js","containers/ParkOverview.js","components/park/CampingMap.js","components/park/CampingInfo.js","containers/ParkCamping.js","containers/ParkDetails.js","App.js","theme/theme.js","index.js"],"names":["Logo","history","useHistory","class","onClick","push","xmlns","viewBox","y","width","height","points","useStyles","makeStyles","theme","drawer","padding","spacing","paddingTop","Menu","styles","location","useLocation","menuItems","text","icon","path","useState","toggle","setToggle","handleToggleMenu","prevToggle","IconButton","edge","color","className","Drawer","variant","anchor","open","onClose","classes","paper","List","map","item","ListItem","button","component","pathname","ListItemIcon","ListItemText","Divider","Nav","AppBar","elevation","Toolbar","page","position","top","maxWidth","margin","Layout","children","Form","state","stateAbbreviations","selectedState","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","props","fetchingParks","onSubmit","this","ButtonGroup","FormControl","InputLabel","id","Select","labelId","onChange","MenuItem","Button","type","size","Component","Hero","images","src","description","alt","title","Typography","gutterBottom","ParkCard","parkInfo","handleSaveParks","handleUnsavePark","handleSelectPark","parkIsSaved","Grid","container","justifyContent","alignItems","xs","sm","md","Card","CardMedia","image","url","CardContent","align","fullName","slice","concat","CardActions","undefined","Tooltip","arrow","endIcon","stateNames","renderStateName","parkAbbreviation","ParksContainer","parkState","parks","savedParks","direction","park","checkPark","find","apiKey","process","Home","selectedParks","defaultParks","fetchParksApi","stateAbbr","fetch","then","response","json","data","newArray","i","Math","floor","random","length","SavedParks","ParkNav","ParkInfo","hours","address","directionsUrl","validAddress","a","standardHours","monday","tuesday","wednesday","thursday","friday","saturday","sunday","line1","line2","line3","city","stateCode","postalCode","href","ParkAbout","phoneNumberString","info","contactInfo","imageStyle","left","bottom","background","backgroundSize","zIndex","phoneNumbers","phoneNumber","join","emailAddresses","emailAddress","style","ParkFees","fees","minHeight","display","cost","ParkActivities","activities","activity","ParkWeather","temp","tempDetails","renderWeatherIcon","res","current","temperature","weather_descriptions","split","ParkOverview","contacts","entranceFees","addresses","weatherInfo","containerStyle","CampingMap","latitude","longitude","campgrounds","selectedCampground","handleCampgroundClick","handleCampgroundWindowClick","googleMapsApiKey","mapContainerStyle","center","lat","lng","zoom","campground","parseInt","onCloseClick","CampingInfo","maxHeight","operatingHours","fee","reservationInfo","numberOfSitesFirstComeFirstServe","numberOfSitesReservable","reservationUrl","directionsOverview","ParkCamping","parkcode","document","getElementById","offsetHeight","ParkDetails","match","startIcon","goBack","states","parkCode","App","selectedPark","newPark","configData","method","headers","body","JSON","stringify","previousState","removePark","newSavedParks","filter","exact","render","routerProps","createTheme","palette","primary","light","main","dark","contrastText","secondary","brown","typography","h1","fontFamily","fontWeight","fontSize","h2","h3","h4","h5","h6","subtitle1","body2","lineHeight","ReactDOM","StrictMode","ThemeProvider"],"mappings":"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","file":"static/js/main.856e1d35.chunk.js","sourcesContent":["import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nexport default function Logo() {\n    const history = useHistory()\n    return (\n        <div>\n            <a class=\"logo\" onClick={() => history.push('/')}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 252.74 129.05\"><rect class=\"cls-1\" y=\"117.51\" width=\"252.74\" height=\"11.55\"></rect><polyline class=\"cls-2\" points=\"201.41 118.62 126.37 5.43 51.33 118.62\"></polyline><polyline class=\"cls-2\" points=\"98.33 48.02 110.15 63.71 126.65 52.57 143 63.71 154.62 48.02\"></polyline><polyline class=\"cls-2\" points=\"236.94 119.04 193.43 53.42 149.93 119.04\"></polyline><polyline class=\"cls-2\" points=\"176.88 78.38 182.52 90.03 193.43 83.36 205.59 90.19 209.98 78.38\"></polyline><polyline class=\"cls-2\" points=\"102.81 119.04 59.31 53.42 15.8 119.04\"></polyline><polyline class=\"cls-2\" points=\"42.75 78.38 48.38 90.03 59.29 83.36 71.46 90.19 75.84 78.38\"></polyline></svg>\n            \n                <h1 class=\"MuiTypography-root logo-text MuiTypography-caption MuiTypography-colorSecondary\">State Adventures</h1>\n            </a>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport { Drawer, List, ListItem, ListItemText, ListItemIcon, IconButton, Divider } from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport LocationOnIcon from '@material-ui/icons/LocationOn'\nimport SearchIcon from '@material-ui/icons/Search'\n\nimport { useHistory, useLocation } from 'react-router-dom'\n\nconst drawerWidth = 240\nconst useStyles = makeStyles((theme) => {\n    return {\n        drawer: {\n            width: drawerWidth,\n            padding: theme.spacing(2),\n        },\n        padding: {\n            paddingTop: theme.spacing(4)\n        }\n    }\n})\n\nexport default function Menu() {\n    const styles = useStyles()\n    const history = useHistory()\n    const location = useLocation()\n    const menuItems = [\n        {\n            text: 'Explore Parks',\n            icon: <SearchIcon />,\n            path: '/'\n        },\n        {\n            text: 'Saved Parks',\n            icon: <LocationOnIcon />,\n            path: '/saved-parks'\n        }\n    ]\n\n    const [toggle, setToggle] = useState(false)\n\n    const handleToggleMenu = () => {\n        setToggle(prevToggle => !prevToggle)\n    }\n    return (\n        <>\n        <IconButton edge=\"start\" color=\"secondary\" aria-label=\"open navigation\" className=\"navigation-btn\" onClick={handleToggleMenu}>\n            <MenuIcon />\n        </IconButton>\n\n        <Drawer\n        variant=\"temporary\"\n        anchor=\"right\"\n        open={toggle}\n        onClose={handleToggleMenu}\n        className={styles.drawer}\n        classes={{paper: styles.drawer}}>\n            <List className={styles.padding}>\n            {menuItems.map(item => (\n                <ListItem key={item.text}\n                button\n                component=\"a\"\n                className={location.pathname === item.path ? 'active' : null}\n                onClick={() => history.push(item.path)}>\n                    <ListItemIcon>{item.icon}</ListItemIcon>\n                    <ListItemText>{item.text}</ListItemText>\n                </ListItem>\n            ))}\n            </List>\n            <Divider />\n        </Drawer>\n        </>\n    )\n}\n","import React from 'react'\nimport '../css/Nav.css'\nimport { AppBar, Toolbar} from '@material-ui/core'\n\n\nimport Logo from '../components/nav/Logo'\nimport Menu from '../components/nav/Menu'\n\nconst Nav = () => {\n    return (\n    <AppBar className=\"appbar\" color=\"inherit\" elevation={0}>\n        <Toolbar className=\"toolbar\">\n            <Logo />\n\n            <Menu />\n        </Toolbar>\n    </AppBar>\n    )\n}\n\nexport default Nav\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core'\n\nimport Nav from './Nav'\n\nconst useStyles = makeStyles((theme) => {\n    return {\n        page: {\n            width: '100%',\n            position: 'relative',\n            top: 118,\n            maxWidth: 1400,\n            margin: 'auto'\n        }\n    }\n})\n\nexport default function Layout({children}) {\n    const styles = useStyles()\n\n    return (\n       <>\n         <Nav />\n\n         <div className={styles.page}>\n            {/* output children  wrapped in layout on the App.js */}\n            {children}\n         </div>\n       </>\n    )\n}\n","import React, { Component } from 'react'\nimport '../../css/Hero.css'\nimport { FormControl, InputLabel, Select, MenuItem, Button, ButtonGroup } from '@material-ui/core'\n\nexport class Form extends Component {\n    state = {\n        stateAbbreviations: [\n            'AL','AK','AS','AZ','AR','CA','CO','CT','DE','DC','FM','FL','GA',\n            'GU','HI','ID','IL','IN','IA','KS','KY','LA','ME','MH','MD','MA',\n            'MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND',\n            'MP','OH','OK','OR','PW','PA','PR','RI','SC','SD','TN','TX','UT',\n            'VT','VI','VA','WA','WV','WI','WY'\n           ],\n           selectedState: \"\"\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        this.props.fetchingParks(this.state.selectedState)\n    }\n\n\n    render() {\n        return (\n            <form className=\"hero-form\" onSubmit={this.handleSubmit}>\n                <ButtonGroup>\n                    <FormControl variant=\"outlined\" color=\"secondary\">\n                        <InputLabel id=\"select-state\">Select State</InputLabel>\n                        <Select\n                        labelId=\"select-state\"\n                        name=\"selectedState\"\n                        value={this.state.selectedState}\n                        onChange={this.handleChange}\n                        >\n                            {\n                            this.state.stateAbbreviations.map(state => (\n                                <MenuItem value={state} key={state}>{state}</MenuItem> \n                            ))\n                            }\n                        </Select>\n                    </FormControl>\n\n                    <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    >\n                        Find Parks\n                    </Button>\n                </ButtonGroup>\n            </form>\n        )\n    }\n}\n\nexport default Form\n","import React from 'react'\nimport '../../css/Hero.css'\nimport Form from './Form'\n\nimport { Typography } from '@material-ui/core'\n\nconst Hero = ({ fetchingParks }) => {\n    const images = [\n        {\n            src: 'https://images.unsplash.com/photo-1608233695800-34245ba7274f?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80',\n            description: 'Yellowstone National Park, United States'\n        },\n        {\n            src: 'https://images.unsplash.com/photo-1606859309981-270838d57ed8?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1189&q=80',\n            description: 'Arches National Park, Utah, USA'\n        }\n    ]\n\n    return (\n        <div className=\"hero\">\n            <div className=\"hero-image-1\">\n                 <img className=\"img\" src={images[0].src} alt={images[0].description} title={images[0].description} />\n            </div>\n\n            <div className=\"hero-content\">\n                <Typography variant=\"h2\" component=\"h1\" color=\"secondary\" gutterBottom>\n                    Start Your Park Adventure Today\n                </Typography>\n                <Form fetchingParks={fetchingParks}/>\n             </div>\n\n             <div className=\"hero-image-2\">\n                 <img className=\"img\" src={images[1].src} alt={images[1].description} title={images[1].description} />\n            </div>\n\n\n        </div>\n    )\n\n}\n\nexport default Hero\n","import React from 'react'\nimport '../css/ParkCard.css'\nimport { Grid, Card, CardMedia, CardContent, CardActions, Typography, Button, Tooltip, IconButton } from '@material-ui/core'\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'\nimport FavoriteIcon from '@material-ui/icons/Favorite'\nimport TrendingFlatIcon from '@material-ui/icons/TrendingFlat'\n\n\nconst ParkCard = ({parkInfo, handleSaveParks, handleUnsavePark, handleSelectPark, history, parkIsSaved}) => {\n\n    const viewParkButtonClick = () => {\n        handleSelectPark(parkInfo)\n        history.push('/park-details/overview')\n    }\n\n    return (\n        <Grid\n        item\n        container\n        justifyContent=\"center\"\n        alignItems=\"stretch\"\n        xs={12} sm={12} md={6}>\n            <Card className=\"card\" elevation={0}>\n                <CardMedia\n                image={parkInfo.images[0].url}\n                />\n\n                <CardContent align=\"left\">\n                    <Typography variant=\"h5\" component=\"h3\" color=\"secondary\" gutterBottom>\n                    {parkInfo.fullName}\n                    </Typography>\n                    <Typography variant=\"caption\" component=\"p\" color=\"secondary\">\n                        {parkInfo.description.slice(0, 200).concat('...')}\n                    </Typography>\n\n                </CardContent> \n                <CardActions className=\"card-actions\">\n                    { parkIsSaved === undefined ?\n                    <Tooltip title=\"Save Park\" arrow>\n                        <IconButton color=\"primary\"\n                        onClick={() => handleSaveParks(parkInfo)}\n                        >\n                            <FavoriteBorderIcon />\n                        </IconButton>\n                    </Tooltip>\n                    :\n                    <Tooltip title=\"Remove Park\" arrow>\n                    <IconButton color=\"primary\"\n                    onClick={() => handleUnsavePark(parkInfo)}\n                    >\n                        <FavoriteIcon />\n                    </IconButton>\n                    </Tooltip>\n                    }\n\n                    <Button\n                    variant=\"text\"\n                    size=\"large\"\n                    color=\"primary\"\n                    endIcon={<TrendingFlatIcon />}\n                    onClick={viewParkButtonClick}\n                    >\n                        View Park \n                    </Button>\n                </CardActions>\n\n            </Card>\n        </Grid>\n    )\n}\n\nexport default ParkCard","const stateNames = {\n    \"AL\": \"Alabama\",\n    \"AK\": \"Alaska\",\n    \"AS\": \"American Samoa\",\n    \"AZ\": \"Arizona\",\n    \"AR\": \"Arkansas\",\n    \"CA\": \"California\",\n    \"CO\": \"Colorado\",\n    \"CT\": \"Connecticut\",\n    \"DE\": \"Delaware\",\n    \"DC\": \"District Of Columbia\",\n    \"FM\": \"Federated States Of Micronesia\",\n    \"FL\": \"Florida\",\n    \"GA\": \"Georgia\",\n    \"GU\": \"Guam\",\n    \"HI\": \"Hawaii\",\n    \"ID\": \"Idaho\",\n    \"IL\": \"Illinois\",\n    \"IN\": \"Indiana\",\n    \"IA\": \"Iowa\",\n    \"KS\": \"Kansas\",\n    \"KY\": \"Kentucky\",\n    \"LA\": \"Louisiana\",\n    \"ME\": \"Maine\",\n    \"MH\": \"Marshall Islands\",\n    \"MD\": \"Maryland\",\n    \"MA\": \"Massachusetts\",\n    \"MI\": \"Michigan\",\n    \"MN\": \"Minnesota\",\n    \"MS\": \"Mississippi\",\n    \"MO\": \"Missouri\",\n    \"MT\": \"Montana\",\n    \"NE\": \"Nebraska\",\n    \"NV\": \"Nevada\",\n    \"NH\": \"New Hampshire\",\n    \"NJ\": \"New Jersey\",\n    \"NM\": \"New Mexico\",\n    \"NY\": \"New York\",\n    \"NC\": \"North Carolina\",\n    \"ND\": \"North Dakota\",\n    \"MP\": \"Northern Mariana Islands\",\n    \"OH\": \"Ohio\",\n    \"OK\": \"Oklahoma\",\n    \"OR\": \"Oregon\",\n    \"PW\": \"Palau\",\n    \"PA\": \"Pennsylvania\",\n    \"PR\": \"Puerto Rico\",\n    \"RI\": \"Rhode Island\",\n    \"SC\": \"South Carolina\",\n    \"SD\": \"South Dakota\",\n    \"TN\": \"Tennessee\",\n    \"TX\": \"Texas\",\n    \"UT\": \"Utah\",\n    \"VT\": \"Vermont\",\n    \"VI\": \"Virgin Islands\",\n    \"VA\": \"Virginia\",\n    \"WA\": \"Washington\",\n    \"WV\": \"West Virginia\",\n    \"WI\": \"Wisconsin\",\n    \"WY\": \"Wyoming\"\n}\n\nexport function renderStateName(parkAbbreviation) {\n    return stateNames[parkAbbreviation]\n  }","import React from 'react'\nimport { Grid, Typography } from '@material-ui/core'\nimport ParkCard from '../components/ParkCard'\nimport { renderStateName } from '../renderStateName'\n\nconst ParksContainer = ({title, parkState, parks, handleSaveParks, handleUnsavePark, handleSelectPark, history, savedParks}) => {\n\n    //function to check if park is saved or not \n    const checkIfParkIsSaved = (checkPark) => {\n        return savedParks.find(park => park.id === checkPark.id)\n    }\n\n    return (\n        <Grid container\n        id=\"results\"\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\" >\n            <Grid container item\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\" >\n            <Typography variant=\"h3\" component=\"h2\" color=\"secondary\" className=\"center\" gutterBottom>\n                <span className=\"subtitle\">{renderStateName(parkState)}</span>\n                {title}\n            </Typography>\n            </Grid>\n\n            <Grid container item\n            direction=\"row\"\n            justifyContent=\"space-around\"\n            alignItems=\"stretch\"\n            spacing={6} >\n                {parks.map(park => <ParkCard\n                handleSaveParks={handleSaveParks}\n                handleUnsavePark={handleUnsavePark}\n                handleSelectPark={handleSelectPark}\n                history={history}\n                key={park.id}\n                parkIsSaved={checkIfParkIsSaved(park)}\n                parkInfo={park}/>)}\n            </Grid>\n\n        </Grid>\n    )\n}\n\nexport default ParksContainer","import React, { Component } from 'react'\nimport Hero from '../components/home/Hero'\nimport ParksContainer from './ParksContainer'\nconst apiKey = process.env.REACT_APP_API_PARKS\n\n\nexport class Home extends Component {\n    state = {\n        selectedParks: [],\n        selectedState: null,\n        defaultParks: [],\n    }\n\n    componentDidMount() {\n        //fetch default parks \n        fetch(`https://developer.nps.gov/api/v1/parks?api_key=${apiKey}&limit=50`)\n        .then(response => response.json())\n        .then(json => {\n            const newArray = []\n            for(let i = 0; i < 4; i++) {\n                newArray.push(json.data[Math.floor(Math.random()*json.data.length)])\n            }\n            this.setState({\n            defaultParks: newArray,\n            })\n\n        })\n    }\n\n\n    fetchParksApi = (stateAbbr = null) => {\n        //fetch parks by state \n        fetch(`https://developer.nps.gov/api/v1/parks?stateCode=${stateAbbr}=&api_key=${apiKey}`)\n        .then(response => response.json())\n        .then(json => {\n        //   console.log(json)\n          this.setState({\n            selectedParks: json.data,\n            selectedState: stateAbbr\n          })\n    \n        })\n      }\n\n      \n    render() {\n        return (\n            <>\n             <Hero fetchingParks={this.fetchParksApi}/>\n\n             <ParksContainer\n                history={this.props.history}\n                title=\"National Parks\"\n                savedParks={this.props.savedParks}\n                parkState={this.state.selectedState} \n                handleSaveParks={this.props.handleSaveParks}\n                handleUnsavePark={this.props.handleUnsavePark}\n                handleSelectPark={this.props.handleSelectPark}\n                parks={this.state.selectedParks.length !== 0 ? this.state.selectedParks : this.state.defaultParks}\n                />\n            </>\n        )\n    }\n}\n\nexport default Home\n","import React from 'react'\nimport ParksContainer from './ParksContainer'\n\nconst SavedParks = ({history, savedParks, handleUnsavePark, handleSaveParks, handleSelectPark}) => {\n    return (\n        <>\n            <ParksContainer\n            history={history}\n            title=\"Saved Parks\"\n            savedParks={savedParks}\n            handleSaveParks={handleSaveParks}\n            handleUnsavePark={handleUnsavePark}\n            handleSelectPark={handleSelectPark}\n            parks={savedParks}/>\n        </>\n    )\n}\n\nexport default SavedParks","import React from 'react'\nimport { Grid, List, ListItem, ListItemText, Divider, Typography } from '@material-ui/core'\nimport { renderStateName } from '../../renderStateName'\n\nconst ParkNav = ({name, state, history, page}) => {\n\n    const menuDetailItems = [\n        {\n            text: 'Overview',\n            path: '/park-details/overview'\n        },\n        {\n            text: 'Camping',\n            path: '/park-details/camping'\n        }\n    ]\n\n\n    return (\n        <Grid item className=\"details-menu background-1\">\n             <Typography variant=\"h6\" component=\"h2\" className=\"text-light\" gutterBottom>\n                <span className=\"subtitle\">{renderStateName(state)}</span>\n                {name}\n            </Typography>\n\n            <List className=\"text-light\">\n            {menuDetailItems.map(item => (\n                <>\n                <ListItem key={item.text}\n                button\n                component=\"a\"\n                className={page === item.path ? 'active' : null}\n                onClick={() => history.push(item.path)}>\n                    <ListItemText>{item.text}</ListItemText>\n                </ListItem>\n                <Divider className=\"background-3\" />\n                </>\n            ))}\n            </List>\n           \n        </Grid>\n    )\n}\n\nexport default ParkNav","import React from 'react'\nimport { Grid, Typography, Button, List, ListItem } from '@material-ui/core'\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos'\n\nconst ParkInfo = ({hours, address, directionsUrl}) => {\n\n    const validAddress = address.find(a => a.type === \"Physical\")\n\n    return (\n        <Grid item className=\"details-info background-2 text-light\">\n            <Typography variant=\"h6\" component=\"h3\" gutterBottom>\n                Park Information\n            </Typography>\n\n            <Typography variant=\"subtitle1\" component=\"p\" className=\"padding-top\">\n                Hours\n            </Typography>\n            <Typography variant=\"body2\" gutterBottom>\n                {hours.description}\n            </Typography>\n            <List className=\"hours\">\n                <ListItem>Monday: {hours.standardHours.monday}</ListItem>\n                <ListItem>Tuesday: {hours.standardHours.tuesday}</ListItem>\n                <ListItem>Wednesday: {hours.standardHours.wednesday}</ListItem>\n                <ListItem>Thursday: {hours.standardHours.thursday}</ListItem>\n                <ListItem>Friday: {hours.standardHours.friday}</ListItem>\n                <ListItem>Saturday: {hours.standardHours.saturday}</ListItem>\n                <ListItem>Sunday: {hours.standardHours.sunday}</ListItem>\n            </List>\n\n            <Typography variant=\"subtitle1\" component=\"p\" className=\"padding-top\">\n                Location\n            </Typography>\n            <List className=\"address\">\n                <ListItem>{validAddress.line1}</ListItem>\n                {validAddress.line2 ? \n                <ListItem>{validAddress.line2}</ListItem>\n                : null\n                 }\n                 {validAddress.line3 ? \n                <ListItem>{validAddress.line3}</ListItem>\n                : null\n                 }\n                <ListItem>{validAddress.city}, {validAddress.stateCode} {validAddress.postalCode}</ListItem>\n            </List>\n\n            <div className=\"padding-top\">\n            <Button\n            href={directionsUrl}\n            target=\"_blank\"\n            variant=\"contained\"\n            size=\"large\"\n            endIcon={<ArrowForwardIosIcon />}>\n                Park Directions\n            </Button>\n            </div>\n\n\n\n        </Grid>\n    )\n}\n\n\nexport default ParkInfo","import React from 'react'\nimport { renderPhoneNumber } from '../../renderPhoneNumber'\nimport { Grid, Divider, Typography, List, ListItem, Button, Tooltip, IconButton } from '@material-ui/core'\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos'\nimport FavoriteIcon from '@material-ui/icons/Favorite'\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'\n\nconst ParkAbout = ({info, url, contactInfo, image, parkIsSaved, handleUnsavePark, handleSaveParks, parkInfo}) => {\n\n    const imageStyle = {\n        width: \"100%\",\n        height: \"55%\",\n        position: \"absolute\",\n        left: 0,\n        bottom: 0,\n        background: `url(${image.url}) no-repeat center`,\n        backgroundSize: 'cover',\n        zIndex: -1\n      }\n\n    return (\n        <Grid item\n        xs={12} sm={12} md={5}\n        className=\"details-about\">\n            <Divider className=\"background-3\" />\n\n            <Grid container\n            alignItems=\"center\"\n            justifyContent=\"space-between\">\n                <Grid item>\n                    <Typography variant=\"h3\" component=\"h2\" color=\"secondary\" className=\"padding-top-lg\">\n                    About Park\n                    </Typography>\n                    <Typography variant=\"h4\" component=\"p\">\n                    <span className=\"subtitle\">Summary</span>\n                    </Typography>\n                </Grid>\n\n                <Grid item>\n                     { parkIsSaved === undefined ?\n                    <Tooltip title=\"Save Park\" arrow>\n                        <IconButton color=\"primary\"\n                        onClick={() => handleSaveParks(parkInfo)}\n                        >\n                            <FavoriteBorderIcon />\n                        </IconButton>\n                    </Tooltip>\n                    :\n                    <Tooltip title=\"Remove Park\" arrow>\n                    <IconButton color=\"primary\"\n                    onClick={() => handleUnsavePark(parkInfo)}\n                    >\n                        <FavoriteIcon />\n                    </IconButton>\n                    </Tooltip>\n                    }\n                </Grid>\n            </Grid>\n            <Typography className=\"color-3 padding-top\">\n                {info}\n            </Typography>\n\n            <List className=\"hours color-1\">\n                {contactInfo.phoneNumbers ?\n                \n                <ListItem><span className=\"strong\">Tel:</span>&nbsp; {renderPhoneNumber(contactInfo.phoneNumbers[0].phoneNumber)}</ListItem>\n\n                : null\n                }\n                {contactInfo.emailAddresses ?\n                \n                <ListItem><span className=\"strong\">Email:</span>&nbsp; {contactInfo.emailAddresses[0].emailAddress}</ListItem>\n                \n                : null\n                }\n\n            </List>\n\n            <div className=\"padding-top\">\n                <Button\n                href={url}\n                target=\"_blank\"\n                variant=\"contained\"\n                size=\"large\"\n                color=\"primary\"\n                endIcon={<ArrowForwardIosIcon />}>\n                    View Park Website\n                </Button>\n            </div>\n            \n            \n            <div style={imageStyle} className=\"image-hidden-xs\"></div>\n        </Grid>\n    )\n}\n\nexport default ParkAbout","export function renderPhoneNumber(phoneNumberString) {\n    let phoneArray = [phoneNumberString.slice(0,3),phoneNumberString.slice(3,6), phoneNumberString.slice(6) ]\n    \n    return phoneArray.join('-')\n  }","import React from 'react'\nimport { Grid, Typography } from '@material-ui/core'\n\n\nexport default function ParkFees({image, fees}) {\n\n    const imageStyle = {\n        width: \"100%\",\n        height: \"55%\",\n        minHeight: 500,\n        position: \"relative\",\n        left: 0,\n        top: 0,\n        background: image ? `url(${image.url}) no-repeat center` : '#A38B74',\n        backgroundSize: 'cover',\n        zIndex: -1,\n        display: 'flex',\n        alignItems: 'flex-end'\n      }\n\n    return (\n        <Grid item container style={imageStyle}>\n            <Grid item  className=\"details-fees text-light\">\n                <Typography variant=\"h6\" component=\"h3\" gutterBottom>\n                    Entrance Fees\n                </Typography>\n\n                <Typography gutterBottom>\n                    <span className=\"strong\">Cost: ${fees[0].cost}</span>\n                </Typography>\n\n                <Typography>\n                    {fees[0].description}\n                </Typography>\n            </Grid>\n        </Grid>\n    )\n}\n","import React from 'react'\nimport { Grid, List, ListItem, ListItemText, Divider, Typography } from '@material-ui/core'\n\nconst ParkActivities = ({activities}) => {\n    return (\n        <Grid item className=\"details-activity-item item-1 background-1\">\n             <Typography variant=\"h6\" component=\"h2\" className=\"text-light\" gutterBottom>\n                 Activites\n                <span className=\"subtitle\">To Do</span>\n            </Typography>\n\n            <List className=\"text-light\">\n            {activities.map(activity => (\n                <>\n                <ListItem key={activity.id}>\n                    <ListItemText>{activity.name}</ListItemText>\n                </ListItem>\n                <Divider className=\"background-3\" />\n                </>\n            ))}\n            </List>\n           \n        </Grid>\n    )\n}\n\nexport default ParkActivities","import React, { Component } from 'react'\nimport { Grid, Typography } from '@material-ui/core'\nimport WbSunnyOutlinedIcon from '@material-ui/icons/WbSunnyOutlined'\nimport FilterDramaIcon from '@material-ui/icons/FilterDrama'\nimport OpacityIcon from '@material-ui/icons/Opacity'\nimport AcUnitIcon from '@material-ui/icons/AcUnit'\nconst apiKey = process.env.REACT_APP_API_WEATHER\n\nexport class ParkWeather extends Component {\n    state = {\n        temp: null,\n        tempDetails: null\n    }\n\n    componentDidMount(){\n        const validAddress = this.props.address.find(a => a.type === \"Physical\")\n\n        fetch(`https://api.weatherstack.com/current?access_key=${apiKey}&units=f&query=${validAddress.postalCode}`)\n        .then(res => res.json())\n        .then(json => {\n  \n            this.setState({\n                temp: json.current.temperature,\n                tempDetails: json.current.weather_descriptions[0]\n            })\n        })\n    }\n\n    renderWeatherIcon = (description) => {\n        let icon \n\n        switch(description) {\n            case \"Partly cloudy\":\n            case \"Cloudy\":\n            case \"Overcast\":\n            case \"Fog\":\n                icon = <FilterDramaIcon />\n                break\n            case \"Mist\":\n            case \"Patchy rain possible\":\n            case \"Patchy light drizzle\":\n            case \"Light drizzle\":\n            case \"Patchy light rain\":\n            case \"Light rain\":\n            case \"Moderate rain at times\":\n            case \"Moderate rain\":\n            case \"Heavy rain at times\":\n            case \"Heavy rain\":\n            case \"Light freezing rain\":\n            case \"Thundery outbreaks possible\":\n            case \"Patchy freezing drizzle possible\":\n            case \"Freezing drizzle\":\n            case \"Heavy freezing drizzle\":\n            case \"Rain\":\n                icon = <OpacityIcon />\n                break\n            case \"Patchy snow possible\":\n            case \"Patchy sleet possible\":\n            case \"Blowing snow\":\n            case \"Blizzard\":\n            case \"Freezing fog\":\n                icon = <AcUnitIcon />\n                break\n            default:\n                icon = <WbSunnyOutlinedIcon />\n        }\n\n        return icon\n    }\n\n    render() {\n        return (\n            <Grid item className=\"details-activity-item item-2 background-2 text-light\">\n                <Typography variant=\"h6\" component=\"h2\" className=\"center\" gutterBottom>\n                    Current Weather\n                </Typography>\n\n                <div className=\"weather-icon\">\n                    {this.renderWeatherIcon(this.state.tempDetails)}\n                </div>\n\n                <div className=\"center\">\n                    <Typography className=\"padding-top\" variant=\"h5\" component=\"p\">\n                        {this.state.temp}&#8457;\n                    </Typography>\n                    <Typography variant=\"subtitle1\">\n                        {this.state.tempDetails}\n                    </Typography>\n                </div>\n\n                <Typography className=\"padding-top-lg\">\n                    {this.props.description.split('.').slice(0,3).join('.')}\n                </Typography>\n             </Grid>\n        )\n    }\n}\n\nexport default ParkWeather","import React from 'react'\nimport ParkAbout from '../components/park/ParkAbout'\nimport ParkFees from '../components/park/ParkFees'\nimport ParkActivities from '../components/park/ParkActivities'\nimport ParkWeather from '../components/park/ParkWeather'\n\nimport { Grid } from '@material-ui/core'\n\nconst ParkOverview = ({park, handleUnsavePark, handleSaveParks, savedParks}) => {\n\n     //function to check if park is saved or not \n     const checkIfParkIsSaved = (checkPark) => {\n        return savedParks.find(park => park.id === checkPark.id)\n    }\n    return (\n        <>\n        <ParkAbout\n        info={park.description}\n        url={park.url}\n        contactInfo={park.contacts}\n        image={park.images[Math.floor(Math.random() * park.images.length)]}\n        parkIsSaved={checkIfParkIsSaved(park)}\n        handleUnsavePark={handleUnsavePark}\n        handleSaveParks={handleSaveParks}\n        parkInfo={park}\n            />\n\n        <Grid item\n        xs={12} sm={12} md={4}\n        className=\"relative details-right\">\n            <ParkFees\n            image={park.images[Math.floor(Math.random() * park.images.length)]}\n            fees={park.entranceFees}/>\n\n            <Grid item container className=\"details-activities\">\n                <ParkActivities activities={park.activities}/>\n\n                <ParkWeather address={park.addresses} description={park.weatherInfo}/>\n            </Grid>\n        </Grid>  \n        </>\n    )\n}\n\nexport default ParkOverview","import React from 'react'\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api'\nimport { Card, CardContent, Typography, CardMedia } from '@material-ui/core'\nconst apiKey = process.env.REACT_APP_API_MAPS\n\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n}\n\nconst CampingMap= ({latitude, longitude, campgrounds, selectedCampground, handleCampgroundClick, handleCampgroundWindowClick}) => {\n  return (\n    <LoadScript\n        googleMapsApiKey={apiKey}\n      >\n        <GoogleMap\n          mapContainerStyle={containerStyle}\n          center={{lat: latitude, lng: longitude}}\n          zoom={8}\n        >\n          {\n            campgrounds.length !== 0 \n            ?\n            campgrounds.map(campground => {\n              \n              return (\n                <Marker key={campground.id}\n                position={{lat: parseInt(campground.latitude), lng: parseInt(campground.longitude)}}\n                onClick={() => handleCampgroundClick(campground)}\n\n              />\n              )\n            })\n            : \n            \n            <Typography variant=\"h4\" component=\"p\" gutterBottom className=\"map-modal text-light\">\n            No Campgrounds Avaliable\n            </Typography>\n          }\n\n          {\n            selectedCampground && (\n              <InfoWindow\n              position={{lat: parseInt(selectedCampground.latitude), lng: parseInt(selectedCampground.longitude)}}\n              onCloseClick={handleCampgroundWindowClick}\n              >\n                <Card elevation={0} className=\"info-window\">\n                  {selectedCampground.images.length !== 0 ?\n                  <CardMedia\n                  image={selectedCampground.images[0].url}\n                  />\n                  : null\n                   }\n                   <CardContent>\n                    <Typography variant=\"h6\" component=\"p\" color=\"secondary\" gutterBottom>\n                      {selectedCampground.name}\n                      </Typography>\n                      <Typography variant=\"caption\" component=\"p\" color=\"secondary\">\n                        {selectedCampground.description}\n                    </Typography>\n\n                   </CardContent>\n                </Card>\n              </InfoWindow>\n            )\n          }\n        </GoogleMap>\n      </LoadScript>\n  )\n}\n\nexport default CampingMap\n\n","import React from 'react'\nimport { Grid, Typography, Button, List, ListItem } from '@material-ui/core'\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos'\n\n\n\nconst CampingInfo = ({campground, height}) => {\n\n    const style = {\n        maxHeight: height ? `${height}px` : '800px'\n    }\n    return (\n        <Grid item\n            xs={12} sm={12} md={3}\n            style={style}\n            className=\"details-camping background-2 text-light\">\n            <Typography variant=\"h6\" component=\"h3\" gutterBottom>\n                Campground Information\n            </Typography>\n\n            {\n                campground.operatingHours.length !== 0 ?\n                <>\n                    <Typography variant=\"subtitle1\" component=\"p\" className=\"padding-top\">\n                        Hours\n                    </Typography>\n                    <Typography variant=\"body2\" gutterBottom>\n                        {campground.operatingHours[0].description}\n                    </Typography>\n                    </>\n                : null \n                \n            }\n\n            {\n                campground.fees && (\n                    campground.fees.map(fee => {\n                        return (\n                            <div key={fee.title}>\n                                <Typography variant=\"subtitle1\" component=\"p\" className=\"padding-top\">\n                                {fee.title}\n                            </Typography>\n                            <Typography variant=\"body2\" gutterBottom>\n                                {fee.description}\n                            </Typography>\n                            <List className=\"hours\">\n                                <ListItem><span class=\"strong\">Cost: ${fee.cost}</span></ListItem>\n                            </List>\n                            </div>\n                        )\n                    })\n                )\n            }\n\n\n\n\n            <Typography variant=\"subtitle1\" component=\"p\" className=\"padding-top\">\n                Reservations\n            </Typography>\n            <Typography variant=\"body2\">\n                {campground.reservationInfo}\n            </Typography>\n            <List className=\"hours\">\n                <ListItem>First Come: {campground.numberOfSitesFirstComeFirstServe} Spots</ListItem>\n                <ListItem>Reserved: {campground.numberOfSitesReservable} Spots</ListItem>\n            </List>\n\n            {campground.reservationUrl && (\n                <div className=\"padding-top\">\n                <Button\n                href={campground.reservationUrl}\n                target=\"_blank\"\n                variant=\"contained\"\n                size=\"large\"\n                endIcon={<ArrowForwardIosIcon />}>\n                    Reserve Spot\n                </Button>\n                </div>\n            )\n                \n            }\n\n\n\n            <Typography variant=\"subtitle1\" component=\"p\" className=\"padding-top\">\n                Directions\n            </Typography>\n            <Typography variant=\"body2\" gutterBottom>\n                {campground.directionsOverview}\n            </Typography>\n\n            <div className=\"padding-top\">\n            <Button\n            href={campground.directionsUrl}\n            target=\"_blank\"\n            variant=\"contained\"\n            size=\"large\"\n            endIcon={<ArrowForwardIosIcon />}>\n                Directions\n            </Button>\n            </div>\n\n\n        </Grid>\n    )\n}\n\n\nexport default CampingInfo","import React, { Component } from 'react'\nimport CampingMap from '../components/park/CampingMap'\nimport CampingInfo from '../components/park/CampingInfo'\nimport { Grid } from '@material-ui/core'\nconst apiKey = process.env.REACT_APP_API_PARKS\n\n\n\nexport class ParkCamping extends Component {\n    state = {\n        campgrounds: [],\n        selectedCampground: null\n    }\n\n    componentDidMount() {\n        \n        fetch(`https://developer.nps.gov/api/v1/campgrounds?parkCode=${this.props.parkcode}=&api_key=${apiKey}&limit=500`)\n        .then(res => res.json())\n        .then(json => {\n            this.setState({\n                campgrounds: json.data\n            })\n        })\n    }\n\n    handleCampgroundClick = (campground) => {\n        this.setState({\n            selectedCampground: campground\n        })\n    }\n\n    handleCampgroundWindowClick = () => {\n        this.setState({\n            selectedCampground: null\n        })\n    }\n    render() {\n        const height = document.getElementById('park-details').offsetHeight\n\n        return (\n            <>\n            <Grid item\n            xs={12} sm={12} md={this.state.selectedCampground ? 6 : 9}\n            className=\"details-map\">\n                <CampingMap\n                longitude={parseInt(this.props.longitude)}\n                latitude={parseInt(this.props.latitude)}\n                campgrounds={this.state.campgrounds}\n                selectedCampground={this.state.selectedCampground}\n                handleCampgroundClick={this.handleCampgroundClick}\n                handleCampgroundWindowClick={this.handleCampgroundWindowClick}\n                 />\n            </Grid>\n\n            {this.state.selectedCampground && (\n                <CampingInfo\n                height={height}\n                campground={this.state.selectedCampground}/>\n            )}\n            </>\n        )\n    }\n}\n\nexport default ParkCamping\n","import React from 'react'\nimport '../css/Details.css'\nimport {Route } from 'react-router-dom'\n\nimport ParkNav from '../components/park/ParkNav'\nimport ParkInfo from '../components/park/ParkInfo'\nimport ParkOverview from './ParkOverview'\nimport ParkCamping from './ParkCamping'\n\nimport { Grid, Button } from '@material-ui/core'\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos'\n\n\n\nconst ParkDetails = ({history, location, match, park, savedParks, handleUnsavePark, handleSaveParks}) => {\n    return (\n        <Grid container>\n            <Grid item>\n                <Button\n                size=\"large\"\n                variant=\"text\"\n                startIcon={<ArrowBackIosIcon/>}\n                onClick={history.goBack}>\n                    Go Back\n                </Button>\n            </Grid>\n\n            <Grid item container className=\"park-details\" id=\"park-details\">\n                <Grid item className=\"details-left\" xs={12} sm={12} md={3}>\n                    <ParkNav\n                    state={park.states}\n                    name={park.fullName}\n                    history={history}\n                    page={location.pathname}\n                    />\n\n                    <ParkInfo\n                    hours={park.operatingHours[0]}\n                    address={park.addresses}\n                    directionsUrl={park.directionsUrl}\n                    />\n                </Grid>\n\n\n                <Route path={`${match.path}/overview`}>\n                    <ParkOverview\n                    savedParks={savedParks}\n                    handleUnsavePark={handleUnsavePark}\n                    handleSaveParks={handleSaveParks}\n                    park={park}\n                        />\n                </Route>\n                <Route path={`${match.path}/camping`}>\n                    <ParkCamping\n                    parkcode={park.parkCode} \n                    longitude={park.longitude}\n                    latitude={park.latitude}\n                    \n                    />\n                </Route>\n\n                \n            </Grid>\n\n        </Grid>\n    )\n}\n\nexport default ParkDetails\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Layout from './containers/Layout'\nimport Home from './containers/Home'\nimport SavedParks from './containers/SavedParks'\nimport ParkDetails from './containers/ParkDetails'\n\n\n\nexport class App extends Component {\n  state = {\n    savedParks: [],\n    selectedPark: null\n  }\n\n  componentDidMount() {\n    //fetch saved parks\n    fetch('http://localhost:3000/parks')\n    .then(res => res.json())\n    .then(savedParks => {\n      this.setState({savedParks})\n    })\n}\n\n  handleSaveParks = (newPark) => {\n    const configData = {\n      method: 'POST',\n      headers: {\n        'accept': 'application/json',\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(newPark)\n    }\n\n    fetch('http://localhost:3000/parks', configData)\n\n    this.setState(previousState => ({\n      savedParks: [...previousState.savedParks, newPark]\n    })\n  )\n  }\n\n  handleUnsavePark = (removePark) => {\n    const newSavedParks = this.state.savedParks.filter(park => park !== removePark)\n\n    this.setState({\n      savedParks: newSavedParks\n    })\n\n    fetch(`http://localhost:3000/parks/${removePark.id}`, {\n      method: 'DELETE'\n    })\n  }\n\n  handleSelectPark = (selectedPark) => {\n    this.setState({selectedPark})\n  }\n\n  render() {\n    return (\n      <Router>\n      <Layout>\n\n        <Route exact path=\"/\"\n        render={(routerProps) => (\n          <Home {...routerProps} \n          handleSaveParks={this.handleSaveParks}\n          handleUnsavePark={this.handleUnsavePark}\n          handleSelectPark={this.handleSelectPark}\n          savedParks={this.state.savedParks} />\n        )} \n        />\n\n        <Route exact path=\"/saved-parks\"\n        render={(routerProps) => (\n          <SavedParks {...routerProps}\n          savedParks={this.state.savedParks}\n          handleSelectPark={this.handleSelectPark}\n          handleUnsavePark={this.handleUnsavePark}\n          handleSaveParks={this.handleSaveParks}/>\n        )}/>\n\n        <Route path=\"/park-details\"\n        render={(routerProps) => (\n          <ParkDetails {...routerProps}\n          park={this.state.selectedPark}\n          savedParks={this.state.savedParks}\n          handleUnsavePark={this.handleUnsavePark}\n          handleSaveParks={this.handleSaveParks}/>\n        )}/>\n\n       </Layout>\n       </Router>\n    )\n  }\n}\n\nexport default App\n","import { createTheme } from '@material-ui/core/styles'\nimport { brown } from '@material-ui/core/colors'\n\n//https://material-ui.com/customization/default-theme/#default-theme\n//https://material-ui.com/customization/color/#color\nconst theme = createTheme({\n    palette: {\n        primary: {\n            light: '#a5c89a',\n            main: '#76976c',\n            dark: '#496941',\n            contrastText: '#fff',\n          },\n          secondary: {\n            // light: '#ff72d6',\n            main: brown[900],\n            // dark: '#b90076',\n            contrastText: '#fff',\n          },\n    },\n    typography: {\n      h1: {\n        fontFamily: '\"Montserrat\", Helvetica, Arial, sans-serif',\n        fontWeight: 600,\n        fontSize: '5em',\n      },\n      h2: {\n        fontFamily: '\"Montserrat\", Helvetica, Arial, sans-serif',\n        fontWeight: 600,\n        fontSize: '3.75em',\n      },\n      h3: {\n        fontFamily: '\"Montserrat\", Helvetica, Arial, sans-serif',\n        fontWeight: 600,\n        fontSize: '3em',\n      },\n      h4: {\n        fontFamily: '\"Montserrat\", Helvetica, Arial, sans-serif',\n        fontWeight: 600,\n      },\n      h5: {\n        fontFamily: '\"Montserrat\", Helvetica, Arial, sans-serif',\n        fontWeight: 600,\n      },\n      h6: {\n        fontFamily: '\"Montserrat\", Helvetica, Arial, sans-serif',\n        fontWeight: 600,\n        fontSize: '1.25em'\n      },\n      subtitle1: {\n        // fontWeight: 100,\n        fontSize: '1.25em'\n      }\n      ,\n      body2: {\n        fontWeight: 100,\n        fontSize: '1em',\n        lineHeight: 1.5\n      }\n    }\n  })\n\n  export default theme","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n//theme\nimport theme from './theme/theme'\nimport { ThemeProvider } from '@material-ui/core'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}